# see https://docs.honeycomb.io/getting-data-in/otel-collector/

extensions:
  basicauth/server:
    htpasswd:
      inline: |
          ${BASIC_AUTH_USER}:${BASIC_AUTH_PASSWORD}
  basicauth/otlp:
    client_auth:
      username: ${GRAFANA_INSTANCE_ID}
      password: ${GRAFANA_API_TOKEN}

receivers:
  otlp:
    protocols:
      http:
        auth:
          authenticator: basicauth/server

processors:
  batch:

exporters:
  logging:
    loglevel: "${LOG_LEVEL}"

  otlphttp/traces:
    endpoint: "${HONEYCOMB_ENDPOINT}"
    headers:
      x-honeycomb-team: "${HONEYCOMB_KEY}"
      # Do not set a dataset - let forwarding application set that.
      
  # for some reason, metrics requires an explicit dataset, so we have
  # a separate exporter config for that
  otlphttp/metrics:
    endpoint: "${HONEYCOMB_ENDPOINT}"
    headers:
      x-honeycomb-team: "${HONEYCOMB_KEY}"
      x-honeycomb-dataset: "${METRICS_DATASET}"

  otlphttp/grafana:
    auth:
      authenticator: basicauth/otlp
    endpoint: "${GRAFANA_ENDPOINT}"

service:
  telemetry:
    logs:
      level: "${LOG_LEVEL}"
  extensions: [basicauth/server, basicauth/otlp]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/traces, otlphttp/grafana, logging]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/metrics, otlphttp/grafana, logging]
